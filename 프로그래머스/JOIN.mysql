# 1. 상품 별 오프라인 매출 구하기
 # a. 서브 쿼리 사용 했을 때
  SELECT P.PRODUCT_CODE, P.PRICE*OO.SUM_SALES_AMOUNT AS SALES
  FROM PRODUCT AS P
  JOIN (SELECT O.PRODUCT_ID, SUM(O.SALES_AMOUNT) AS SUM_SALES_AMOUNT
  FROM OFFLINE_SALE AS O
  GROUP BY O.PRODUCT_ID) AS OO
  ON P.PRODUCT_ID=OO.PRODUCT_ID
  ORDER BY SALES DESC, P.PRODUCT_CODE

 # b. 서브 쿼리 사용 안하고 간략화 했을 때
  SELECT P.PRODUCT_CODE, P.PRICE*OO.SUM_SALES_AMOUNT AS SALES
  FROM PRODUCT AS P
  JOIN (SELECT O.PRODUCT_ID, SUM(O.SALES_AMOUNT) AS SUM_SALES_AMOUNT
  FROM OFFLINE_SALE AS O
  GROUP BY O.PRODUCT_ID) AS OO
  ON P.PRODUCT_ID=OO.PRODUCT_ID
  ORDER BY SALES DESC, P.PRODUCT_CODE

# 2. 없어진 기록 찾기
SELECT O.ANIMAL_ID, O.NAME
FROM ANIMAL_INS AS I
RIGHT JOIN ANIMAL_OUTS AS O
ON I.ANIMAL_ID= O.ANIMAL_ID
WHERE I.ANIMAL_ID IS NULL
ORDER BY I.DATETIME

# 3. 오랜 기간 보호한 동물(1)
SELECT O.ANIMAL_ID, [O.NAME](http://o.name/)
FROM ANIMAL_INS AS I
RIGHT JOIN ANIMAL_OUTS AS O
ON I.ANIMAL_ID= O.ANIMAL_ID
WHERE I.ANIMAL_ID IS NULL
ORDER BY I.DATETIME

# 4. 있었는데요 없었습니다
SELECT I.ANIMAL_ID, I.NAME
FROM ANIMAL_INS AS I
JOIN ANIMAL_OUTS AS O
ON I.ANIMAL_ID= O.ANIMAL_ID
WHERE I.DATETIME>O.DATETIME
ORDER BY I.DATETIME

# 5. 5월 식품들의 총 매출 조회하기
SELECT P.PRODUCT_ID, P.PRODUCT_NAME, P.PRICE*SUM(O.AMOUNT) AS TOTAL_SALES
FROM FOOD_PRODUCT AS P
JOIN FOOD_ORDER AS O
ON P.PRODUCT_ID=O.PRODUCT_ID
WHERE O.PRODUCE_DATE LIKE "2022-05%"
GROUP BY PRODUCT_ID
ORDER BY TOTAL_SALES DESC, P.PRODUCT_ID

# 6. 조건에 맞는 도서와 저자 리스트 출력하기
SELECT
    B.BOOK_ID,
    A.AUTHOR_NAME,
    DATE_FORMAT(B.PUBLISHED_DATE, '%Y-%m-%d') AS PUBLISHED_DATE
FROM BOOK AS B
LEFT JOIN AUTHOR AS A
ON B.AUTHOR_ID=A.AUTHOR_ID
WHERE B.CATEGORY LIKE '경제'
ORDER BY B.PUBLISHED_DATE

# 7. 보호소에서 중성화한 동물
SELECT
    I.ANIMAL_ID,
    I.ANIMAL_TYPE,
    I.NAME
FROM ANIMAL_INS AS I
LEFT JOIN ANIMAL_OUTS AS O
ON I.ANIMAL_ID=O.ANIMAL_ID
WHERE 
    I.SEX_UPON_INTAKE LIKE 'Intact%' AND
    (O.SEX_UPON_OUTCOME LIKE 'NEUTERED%' OR O.SEX_UPON_OUTCOME LIKE 'SPAYED%')
GROUP BY I.ANIMAL_ID
ORDER BY I.ANIMAL_ID

# 8. 주문량이 많은 아이스크림들 조회하기
SELECT H.FLAVOR
FROM FIRST_HALF AS H
LEFT JOIN JULY AS J
ON H.FLAVOR=J.FLAVOR
GROUP BY H.FLAVOR
ORDER BY SUM(H.TOTAL_ORDER)+SUM(J.TOTAL_ORDER) DESC
LIMIT 3

# 9. 그룹별 조건에 맞는 식당 목록 출력하기
SELECT 
	p.MEMBER_NAME,
	R.REVIEW_TEXT,
	DATE_FORMAT(R.REVIEW_DATE, '%Y-%m-%d') AS REVIEW_DATE
FROM MEMBER_PROFILE AS P
JOIN REST_REVIEW AS R
ON P.MEMBER_ID=R.MEMBER_ID
WHERE P.MEMBER_ID IN
	(SELECT MEMBER_ID
	FROM REST_REVIEW
	GROUP BY MEMBER_ID
	HAVING count(MEMBER_ID) =
		(SELECT COUNT(REVIEW_TEXT) AS 'CNT'
		FROM REST_REVIEW
		GROUP BY MEMBER_ID
		ORDER BY CNT DESC
		LIMIT 1))
ORDER BY R.REVIEW_DATE, R.REVIEW_TEXT
